[{"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\index.js":"1","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\App.js":"2","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reportWebVitals.js":"3","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\store\\index.js":"4","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\index.js":"5","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\category.reducers.js":"6","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\constants.js":"7","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\HomePage\\index.js":"8","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\Header\\index.js":"9","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\MenuHeader\\index.js":"10","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\index.js":"11","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\category.action.js":"12","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\helpers\\axios.js":"13","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\urlConfig.js":"14","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\index.js":"15","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\Layout\\index.js":"16","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\product.actions.js":"17","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\product.reducers.js":"18","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js":"19","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\utils\\getQueryParams.js":"20","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js":"21","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Card\\index.js":"22","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\MaterialUI\\index.js":"23","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\auth.actions.js":"24","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\auth.reducers.js":"25","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductDetailsPage\\index.js":"26","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CartPage\\index.js":"27","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\cart.reducers.js":"28","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\cart.actions.js":"29","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CartPage\\CartItem\\index.js":"30","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\PriceDetails\\index.js":"31","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\user.reduceers.js":"32","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\index.js":"33","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\user.actions.js":"34","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\AdressForm.js":"35","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\OrderPage\\index.js":"36","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ClotingAndAccessories\\index.js":"37","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\OrderDetailsPage\\index.js":"38","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Price.js":"39","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Cart.js":"40"},{"size":640,"mtime":1613724807334,"results":"41","hashOfConfig":"42"},{"size":2086,"mtime":1629794048551,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":322,"mtime":1622012434876,"results":"45","hashOfConfig":"42"},{"size":500,"mtime":1629099887219,"results":"46","hashOfConfig":"42"},{"size":2323,"mtime":1612084746858,"results":"47","hashOfConfig":"42"},{"size":2529,"mtime":1629101498580,"results":"48","hashOfConfig":"42"},{"size":299,"mtime":1613462436974,"results":"49","hashOfConfig":"42"},{"size":8159,"mtime":1629826669918,"results":"50","hashOfConfig":"42"},{"size":1309,"mtime":1621846580932,"results":"51","hashOfConfig":"42"},{"size":171,"mtime":1629101247194,"results":"52","hashOfConfig":"42"},{"size":725,"mtime":1613296348846,"results":"53","hashOfConfig":"42"},{"size":641,"mtime":1622469560202,"results":"54","hashOfConfig":"42"},{"size":157,"mtime":1612084746940,"results":"55","hashOfConfig":"42"},{"size":1111,"mtime":1629449763615,"results":"56","hashOfConfig":"42"},{"size":278,"mtime":1621928997947,"results":"57","hashOfConfig":"42"},{"size":1879,"mtime":1622624163222,"results":"58","hashOfConfig":"42"},{"size":1689,"mtime":1622012734864,"results":"59","hashOfConfig":"42"},{"size":2332,"mtime":1622624893107,"results":"60","hashOfConfig":"42"},{"size":545,"mtime":1621949222740,"results":"61","hashOfConfig":"42"},{"size":1770,"mtime":1621926621188,"results":"62","hashOfConfig":"42"},{"size":415,"mtime":1629360337650,"results":"63","hashOfConfig":"42"},{"size":3413,"mtime":1629826048843,"results":"64","hashOfConfig":"42"},{"size":3962,"mtime":1629792993224,"results":"65","hashOfConfig":"42"},{"size":1129,"mtime":1621931525333,"results":"66","hashOfConfig":"42"},{"size":6074,"mtime":1622636152030,"results":"67","hashOfConfig":"42"},{"size":3841,"mtime":1629875729926,"results":"68","hashOfConfig":"42"},{"size":1329,"mtime":1629875314964,"results":"69","hashOfConfig":"42"},{"size":3823,"mtime":1629827348023,"results":"70","hashOfConfig":"42"},{"size":1932,"mtime":1629875713366,"results":"71","hashOfConfig":"42"},{"size":864,"mtime":1622365265193,"results":"72","hashOfConfig":"42"},{"size":1666,"mtime":1629392386943,"results":"73","hashOfConfig":"42"},{"size":11046,"mtime":1629391656990,"results":"74","hashOfConfig":"42"},{"size":3733,"mtime":1629366743171,"results":"75","hashOfConfig":"42"},{"size":6699,"mtime":1629280172771,"results":"76","hashOfConfig":"42"},{"size":2274,"mtime":1629446977600,"results":"77","hashOfConfig":"42"},{"size":1474,"mtime":1629449720661,"results":"78","hashOfConfig":"42"},{"size":3866,"mtime":1629796955437,"results":"79","hashOfConfig":"42"},{"size":353,"mtime":1629797001443,"results":"80","hashOfConfig":"42"},{"size":662,"mtime":1629826503244,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1iosxb2",{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\index.js",[],["180","181"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\App.js",["182","183","184","185"],"import \"./App.css\";\nimport HomePage from \"./containers/HomePage\";\nimport ProductListpage from \"./containers/ProductListPage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  StaticRouter,\n  Switch,\n} from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCartItems, isUserLogedIn } from \"./actions\";\nimport ProductDetailsPage from \"./containers/ProductDetailsPage\";\nimport CartPage from \"./containers/CartPage\";\nimport { updateCart } from \"../src/actions\";\nimport CheckoutPage from \"../src/containers/CheckoutPage\";\nimport OrderPage from \"./containers/OrderPage\";\nimport OrderDetailsPage from \"./containers/OrderDetailsPage\";\nfunction App() {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      //every time a page is refreshed the page loose its state and to keep track of the state we have to check if user is loged in using token stored in local storage. which will then et the state value.\n      dispatch(isUserLogedIn());\n    }\n  }, [auth.authenticate]);\n\n  //since redux data is lost when page refresh to prevent loss of data we save the cart item in local storage as well.\n  // so whenever the page is reloaded the localstorage data should be stored back to the redux store.\n  useEffect(() => {\n    dispatch(updateCart());\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route path=\"/cart\" component={CartPage}></Route>\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route path=\"/account/orders\" component={OrderPage} />\n          <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n          <Route\n            path=\"/:productSlug/:productId/p\"\n            component={ProductDetailsPage}\n          ></Route>\n          <Route path=\"/:slug\" component={ProductListpage}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reportWebVitals.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\store\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\category.reducers.js",["186","187","188","189"],"import { categoryConstant } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst buildNewCategory = (parentId, categories, category) => {\r\n  //check if caegory is parent itself. where parentId is udefined\r\n  if (parentId == undefined) {\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        children: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  let myCategories = [];\r\n  for (let cat of categories) {\r\n    //compare parent id with parent category.\r\n    if (cat._id == parentId) {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategory(\r\n              parentId,\r\n              [\r\n                ...cat.children,\r\n                {\r\n                  _id: category._id,\r\n                  name: category.name,\r\n                  slug: category.slug,\r\n                  parentId: category.parentId,\r\n                  children: category.children,\r\n                },\r\n              ],\r\n              category\r\n            )\r\n          : [],\r\n      });\r\n    } else {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategory(parentId, cat.children, category)\r\n          : [],\r\n      });\r\n    }\r\n  }\r\n  return myCategories; //treversig list.\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstant.GET_ALL_CATEGORY_SUCCESS:\r\n      state = { ...state, categories: action.payload.categories };\r\n      break;\r\n\r\n    case categoryConstant.ADD_NEW_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n    case categoryConstant.ADD_NEW_CATEGORY_SUCCESS:\r\n      const catrgory = action.payload.category;\r\n\r\n      //we are sending parent id --> current category List and newly added category.\r\n      const updatedCategories = buildNewCategory(\r\n        catrgory.parentId,\r\n        state.categories,\r\n        catrgory\r\n      );\r\n      console.log(updatedCategories);\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case categoryConstant.ADD_NEW_CATEGORY_FAILURE:\r\n      state = { ...initState };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\constants.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\HomePage\\index.js",["190","191"],"import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Layout from \"../../components/Layout\";\r\nimport MenuHeader from \"../../components/MenuHeader\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <Layout></Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\Header\\index.js",["192","193","194","195","196","197","198","199"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\MenuHeader\\index.js",["200"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport { getAllCategory } from \"../../actions\";\r\n\r\nfunction MenuHeader() {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n\r\n  /**Function to render Categry */\r\n  const renderCategories = (categories) => {\r\n    //linkedlist queue data structure\r\n    let categoryList = [];\r\n    for (let category of categories) {\r\n      categoryList.push(\r\n        <li key={category._id}>\r\n          {category.parentId ? (\r\n            <a\r\n              href={`/${category.slug}?cid=${category._id}&type=${category.type}`}\r\n            >\r\n              {category.name}\r\n            </a>\r\n          ) : (\r\n            <span>{category.name}</span>\r\n          )}\r\n\r\n          {category.children.length > 0 ? (\r\n            <ul>{renderCategories(category.children)}</ul>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    }\r\n    return categoryList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"menuHeader\">\r\n      <ul>\r\n        {category.categories.length > 0\r\n          ? renderCategories(category.categories)\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuHeader;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\category.action.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\helpers\\axios.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\urlConfig.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\index.js",["201","202","203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getproductBySlug } from \"../../actions\";\r\nimport \"./style.css\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport ProductStore from \"./ProductStore\";\r\nimport getQueryParams from \"../../utils/getQueryParams\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport ClothingAndAccessories from \"./ClotingAndAccessories\";\r\nfunction ProductListPage(props) {\r\n  const renderproduct = () => {\r\n    console.log(props);\r\n    const params = getQueryParams(props.location.search);\r\n    let content = null;\r\n    switch (params.type) {\r\n      case \"store\":\r\n        content = <ProductStore {...props}></ProductStore>;\r\n        break;\r\n      case \"page\":\r\n        content = <ProductPage {...props}></ProductPage>;\r\n        break;\r\n\r\n      default:\r\n        content = <ClothingAndAccessories {...props}></ClothingAndAccessories>;\r\n    }\r\n\r\n    return content;\r\n  };\r\n\r\n  return <Layout>{renderproduct()}</Layout>;\r\n}\r\n\r\nexport default ProductListPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\Layout\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\product.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\product.reducers.js",["207","208"],"import { productConstaints } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  products: [],\r\n  productsByPrice: {\r\n    under5k: [],\r\n    under10k: [],\r\n    under15k: [],\r\n    under20k: [],\r\n    under30k: [],\r\n  },\r\n  pageRequest: false,\r\n  page: {},\r\n  error: null,\r\n  productDetails: {},\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case productConstaints.GET_PRODUCTS_BY_SLUG:\r\n      state = {\r\n        ...state,\r\n        products: action.payload.products,\r\n        productsByPrice: {\r\n          ...action.payload.productsByPrice,\r\n        },\r\n      };\r\n      break;\r\n    case productConstaints.GET_PRODUCT_PAGE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        pageRequest: true,\r\n      };\r\n      break;\r\n    case productConstaints.GET_PRODUCT_PAGE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        page: action.payload.page,\r\n        pageRequest: false,\r\n      };\r\n      break;\r\n    case productConstaints.GET_PRODUCT_PAGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        pageRequest: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n\r\n    case productConstaints.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case productConstaints.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        productDetails: action.payload.productDetails,\r\n      };\r\n      break;\r\n    case productConstaints.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js",["209","210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getproductBySlug, getProductPage } from \"../../../actions\";\r\nimport \"./style.css\";\r\nimport { generatePublicUrl } from \"../../../urlConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../../components/UI/Card\";\r\n\r\nfunction ProductStore(props) {\r\n  const [priceRange, setPriceRange] = useState({\r\n    under5k: 5000,\r\n    under10k: 10000,\r\n    under15k: 15000,\r\n    under20k: 20000,\r\n    under30k: 30000,\r\n  });\r\n  const product = useSelector((state) => state.product);\r\n  // console.log(product.productsByPrice);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getproductBySlug(match.params.slug));\r\n  }, []);\r\n  return (\r\n    <>\r\n      {Object.keys(product.productsByPrice).map((key, index) => {\r\n        return (\r\n          <Card\r\n            className=\"card\"\r\n            key={index}\r\n            headerLeft={`${props.match.params.slug} mobile Under ${priceRange[key]}`}\r\n            headerRight={<button>View all</button>} \r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              {product.productsByPrice[key].map((product, index) => {\r\n                return (\r\n                  <Link\r\n                    style={{ display: \"block\" }}\r\n                    className=\"productContainer\"\r\n                    key={index}\r\n                    to={`/${product.slug}/${product._id}/p`}\r\n                  >\r\n                    <div className=\"productimgContainer\">\r\n                      <img\r\n                        src={generatePublicUrl(product.productPictures[0].img)}\r\n                        alt=\"img\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"productinfo\">\r\n                      <div style={{ margin: \"5px 0\" }}>{product.name}</div>\r\n                      <div>\r\n                        <span>4.3</span>&nbsp;\r\n                        <span>123</span>\r\n                      </div>\r\n                      <div className=\"productPrice\">{product.price}</div>\r\n                    </div>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductStore;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\utils\\getQueryParams.js",["212"],"export default (query) => {\r\n  if (query) {\r\n    const queryString = query.split(\"?\")[1];\r\n    if (queryString.length > 0) {\r\n      const params = queryString.split(\"&\");\r\n      const paramsObject = {};\r\n      params.forEach((param) => {\r\n        const keyValue = param.split(\"=\");\r\n        paramsObject[keyValue[0]] = keyValue[1]; // obj.property is done for static value but obj[property[0]] is done for dynamic value.\r\n      });\r\n      return paramsObject;\r\n    }\r\n  } else {\r\n    const paramsObject = {};\r\n    return paramsObject;\r\n  }\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js",["213","214"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductPage } from \"../../../actions\";\r\nimport getQueryParams from \"../../../utils/getQueryParams\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport Card from \"../../../components/UI/Card\";\r\n\r\nfunction ProductPage(props) {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const { page } = product;\r\n  useEffect(() => {\r\n    const params = getQueryParams(props.location.search);\r\n\r\n    const payLoad = {\r\n      params,\r\n    };\r\n\r\n    dispatch(getProductPage(payLoad));\r\n  }, []);\r\n  return (\r\n    <div style={{ margin: \"0 10px\" }}>\r\n      <h3>{page.title}</h3>\r\n      <Carousel renderThumbs={() => {}}>\r\n        {page.banners &&\r\n          page.banners.map((banner, index) => (\r\n            <a\r\n              key={index}\r\n              style={{ display: \"block\" }}\r\n              href={banner.navigateTo}\r\n            >\r\n              <img src={banner.img} />\r\n            </a>\r\n          ))}\r\n      </Carousel>\r\n\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\r\n      >\r\n        {page.products &&\r\n          page.products.map((product, index) => {\r\n            return (\r\n              <Card\r\n                key={index}\r\n                // style={{ width: \"400px\", height: \"200px\", margin: \"0 5px\" }}\r\n              >\r\n                <img src={product.img} alt=\"\" width=\"200px\" height=\"200px\" />\r\n              </Card>\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {/* {JSON.stringify(product.page)} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Card\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\MaterialUI\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\auth.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\auth.reducers.js",["215","216"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  token: null,\r\n  user: { firstName: \"\", lastName: \"\", email: \"\", picture: \"\" },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  loading: false,\r\n  error: null,\r\n  message: \"\",\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = { ...state, authenticating: true };\r\n      break;\r\n\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n\r\n    case authConstants.LOGOUT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_SUCCESS:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductDetailsPage\\index.js",["217","218","219","220","221","222"],"import React, { useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductDetailsById } from \"../../actions\";\r\nimport { MaterialButton } from \"../../components/MaterialUI\";\r\nimport { AiFillThunderbolt } from \"react-icons/ai\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport { addToCart } from \"../../actions\";\r\nimport \"./style.css\";\r\nimport { getCartItems } from \"../../actions\";\r\nfunction ProductDetailsPage(props) {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const { productId } = props.match.params;\r\n\r\n    const payload = {\r\n      params: {\r\n        productId: productId,\r\n      },\r\n    };\r\n    dispatch(getProductDetailsById(payload));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      dispatch(getCartItems());\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  if (Object.keys(product.productDetails).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div>{product.productDetails.name}</div>\r\n      <div className=\"productDescriptionContainer\">\r\n        <div className=\"flexRow\">\r\n          <div className=\"verticalImageStack\">\r\n            {product.productDetails.productPictures.map((thumb, index) => (\r\n              <div key={index} className=\"thumbnail\">\r\n                <img src={generatePublicUrl(thumb.img)} alt={thumb.img} />\r\n              </div>\r\n            ))}\r\n            {/* <div className=\"thumbnail active\">\r\n              {\r\n                product.productDetails.productPictures.map((thumb, index) => \r\n                <img src={generatePublicUrl(thumb.img)} alt={thumb.img} />)\r\n              }\r\n            </div> */}\r\n          </div>\r\n          <div className=\"productDescContainer\">\r\n            <div className=\"productDescImgContainer\">\r\n              <img\r\n                src={generatePublicUrl(\r\n                  product.productDetails.productPictures[0].img\r\n                )}\r\n                alt={`${product.productDetails.productPictures[0].img}`}\r\n              />\r\n            </div>\r\n\r\n            {/* action buttons */}\r\n            <div className=\"flexRow\">\r\n              <MaterialButton\r\n                title=\"ADD TO CART\"\r\n                bgColor=\"#ff9f00\"\r\n                textColor=\"#ffffff\"\r\n                style={{\r\n                  marginRight: \"5px\",\r\n                }}\r\n                icon={<IoMdCart />}\r\n                onClick={() => {\r\n                  // console.log(\"add to cart clickked\");\r\n                  const { _id, name, price } = product.productDetails;\r\n                  const img = product.productDetails.productPictures[0].img;\r\n                  // console.log({ _id, name, price, img });\r\n                  dispatch(addToCart({ _id, name, price, img }, +1));\r\n                  props.history.push(\"/cart\");\r\n                }}\r\n              />\r\n\r\n              <MaterialButton\r\n                title=\"BUY NOW\"\r\n                bgColor=\"#fb641b\"\r\n                textColor=\"#ffffff\"\r\n                style={{\r\n                  marginLeft: \"5px\",\r\n                }}\r\n                icon={<AiFillThunderbolt />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {/* home > category > subCategory > productName */}\r\n          <div className=\"breed\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"#\">Home</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Mobiles</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">Samsung</a>\r\n                <IoIosArrowForward />\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">{product.productDetails.name}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {/* product description */}\r\n          <div className=\"productDetails\">\r\n            <p className=\"productTitle\">{product.productDetails.name}</p>\r\n            <div>\r\n              <span className=\"ratingCount\">\r\n                4.3 <IoIosStar />\r\n              </span>\r\n              <span className=\"ratingNumbersReviews\">\r\n                72,234 Ratings & 8,140 Reviews\r\n              </span>\r\n            </div>\r\n            <div className=\"extraOffer\">\r\n              Extra <BiRupee />\r\n              4500 off{\" \"}\r\n            </div>\r\n            <div className=\"flexRow priceContainer\">\r\n              <span className=\"price\">\r\n                <BiRupee />\r\n                {product.productDetails.price}\r\n              </span>\r\n              <span className=\"discount\" style={{ margin: \"0 10px\" }}>\r\n                22% off\r\n              </span>\r\n              {/* <span>i</span> */}\r\n            </div>\r\n            <div>\r\n              <p\r\n                style={{\r\n                  color: \"#212121\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                Available Offers\r\n              </p>\r\n              <p style={{ display: \"flex\" }}>\r\n                <span\r\n                  style={{\r\n                    width: \"100px\",\r\n                    fontSize: \"12px\",\r\n                    color: \"#878787\",\r\n                    fontWeight: \"600\",\r\n                    marginRight: \"20px\",\r\n                  }}\r\n                >\r\n                  Description\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    color: \"#212121\",\r\n                  }}\r\n                >\r\n                  {product.productDetails.description}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProductDetailsPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CartPage\\index.js",["223","224"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\cart.reducers.js",["225","226"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\cart.actions.js",["227","228","229"],"import { cartConstants } from \"./constants\";\r\nimport store from \"../store\";\r\n\r\nimport axiosInstance from \"../helpers/axios\";\r\n\r\nexport const addToCart = (product, newQty) => {\r\n  return async (dispatch) => {\r\n    console.log(\"ADD to cart CALLED\");\r\n    const {\r\n      cart,\r\n      cart: { cartItems },\r\n      auth,\r\n    } = store.getState();\r\n\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = { ...product, qty };\r\n\r\n    if (auth.authenticate) {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const payLoad = { cartItems: [{ product: product._id, quantity: qty }] };\r\n\r\n      const res = await axiosInstance.post(\"/user/cart/addtocart\", payLoad);\r\n      if (res.status === 201) {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n    }\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_SUCCESS,\r\n      payload: { cartItems: cartItems },\r\n    });\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const removeCartItem = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.REMOVE_CART_ITEM_REQUEST });\r\n      const res = await axiosInstance.post(`/user/cart/removeItem`, { payload });\r\n      if (res.status === 202) {\r\n        dispatch({ type: cartConstants.REMOVE_CART_ITEM_SUCCESS });\r\n        dispatch(getCartItems());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const updateCart = () => {\r\n  return async (dispatch) => {\r\n    console.log(localStorage.getItem(\"cart\"));\r\n    console.log(\"Action : function updateCart\");\r\n    const { auth, cart } = store.getState();\r\n\r\n    const cartItems = localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : null;\r\n\r\n    // if (cartItems == null) {\r\n    //   console.log(\"nothhing\");\r\n    //   dispatch({ type: cartConstants.RESTE_CART });\r\n    // }\r\n\r\n    if (!auth.authenticate) {\r\n      if (cartItems) {\r\n        console.log(\"we have cart items\");\r\n        console.log({ cartItems });\r\n        dispatch({\r\n          type: cartConstants.ADD_TO_CART_SUCCESS,\r\n          payload: { cartItems },\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (auth.authenticate) {\r\n      if (cartItems) {\r\n        console.log(\"cart found\");\r\n        const dbCart = await axiosInstance.post(\"/user/cart/getCartItems\");\r\n        if (dbCart.status == 200) {\r\n          console.log({ dbCart });\r\n        }\r\n\r\n        const payload = {\r\n          cartItems: Object.keys(cartItems).map((key, index) => {\r\n            console.log(dbCart.data.cartItems[key]);\r\n\r\n            return {\r\n              quantity: cartItems[key].qty + dbCart.data.cartItems[key].qty,\r\n              product: cartItems[key]._id,\r\n            };\r\n          }),\r\n        };\r\n        if (Object.keys(cartItems).length > 0) {\r\n          const res = await axiosInstance.post(\"/user/cart/addtocart\", payload);\r\n          if (res.status === 201) {\r\n            dispatch(getCartItems());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst getCartItems = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const res = await axiosInstance.post(\"/user/cart/getCartItems\");\r\n      if (res.status === 200) {\r\n        const { cartItems } = res.data;\r\n        if (cartItems) {\r\n          dispatch({\r\n            type: cartConstants.ADD_TO_CART_SUCCESS,\r\n            payload: { cartItems },\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nexport { getCartItems };\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CartPage\\CartItem\\index.js",["230","231"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\PriceDetails\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\reducers\\user.reduceers.js",["232","233"],"import { userConstants } from \"../actions/constants\";\r\nconst initState = {\r\n  address: [],\r\n  order: [],\r\n  error: null,\r\n  loading: false,\r\n  orderFetching: false,\r\n  placedOrderId: null,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userConstants.GET_USER_ADDRESS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_SUCCESS:\r\n      state = { ...state, loading: false, address: action.payload.address };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_FAILURE:\r\n      state = { ...state, loading: false, error: action.payload.error };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        orderFetching: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_REQUEST:\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orderDetails: action.payload.order,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_FAILURE:\r\n      break;\r\n    case userConstants.ADD_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        placedOrderId: action.payload.order._id,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\index.js",["234"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Anchor,\r\n  MaterialButton,\r\n  MaterialInput,\r\n} from \"../../components/MaterialUI\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport CartPage from \"../CartPage\";\r\nimport AddressForm from \"./AdressForm\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst CheckoutStep = (props) => {\r\n  return (\r\n    <div className=\"checkoutStep\">\r\n      <div\r\n        onClick={props.onClick}\r\n        className={`checkoutHeader ${props.active && \"active\"}`}\r\n      >\r\n        <div>\r\n          <span className=\"stepNumber\">{props.stepNumber}</span>\r\n          <span className=\"stepTitle\">{props.title}</span>\r\n        </div>\r\n      </div>\r\n      {props.body && props.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = ({\r\n  adr,\r\n  selectAddress,\r\n  enableAddressEditForm,\r\n  confirmDeliveryAddress,\r\n  onAddressSubmit,\r\n}) => {\r\n  return (\r\n    <div className=\"flexRow addressContainer\">\r\n      <div>\r\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n      </div>\r\n      <div className=\"flexRow sb addressinfo\">\r\n        {!adr.edit ? (\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"addressDetail\">\r\n              <div>\r\n                <span className=\"addressName\">{adr.name}</span>\r\n                <span className=\"addressType\">{adr.addressType}</span>\r\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n              </div>\r\n              {adr.selected && (\r\n                <Anchor\r\n                  name=\"EDIT\"\r\n                  onClick={() => enableAddressEditForm(adr)}\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    color: \"#2874f0\",\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"fullAddress\">\r\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\r\n            </div>\r\n            {adr.selected && (\r\n              <MaterialButton\r\n                title=\"DELIVERY HERE\"\r\n                onClick={() => confirmDeliveryAddress(adr)}\r\n                style={{\r\n                  width: \"200px\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <AddressForm\r\n            withoutLayout={true}\r\n            onSubmitForm={onAddressSubmit}\r\n            initialData={adr}\r\n            onCancel={() => {}}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [newAddress, setNewAddress] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  const [confirmAddress, setConfirmAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [orderSummary, setOrderSummary] = useState(false);\r\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n  const [paymentOption, setPaymentOption] = useState(false);\r\n  const [confirmOrder, setConfirmOrder] = useState(false);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddressSubmit = (addr) => {\r\n    console.log(\"submited\");\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const selectAddress = (addr) => {\r\n    //when user select address then show butotns .\r\n    //console.log(addr);\r\n    console.log(addr);\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id\r\n        ? { ...adr, selected: true }\r\n        : { ...adr, selected: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const confirmDeliveryAddress = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const enableAddressEditForm = (addr) => {\r\n    const updatedAddress = address.map(\r\n      (adr) =>\r\n        adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false } //determine id address to edit or add new.\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const userOrderConfirmation = () => {\r\n    setOrderConfirmation(true);\r\n    setOrderSummary(false);\r\n    setPaymentOption(true);\r\n  };\r\n\r\n  const onConfirmOrder = () => {\r\n    const totalAmount = Object.keys(cart.cartItems).reduce(\r\n      (totalPrice, key) => {\r\n        const { price, qty } = cart.cartItems[key];\r\n        return totalPrice + price * qty;\r\n      },\r\n      0\r\n    );\r\n\r\n    const items = Object.keys(cart.cartItems).map((key) => ({\r\n      productId: key,\r\n      payablePrice: cart.cartItems[key].price,\r\n      purchasedQty: cart.cartItems[key].qty,\r\n    }));\r\n    const payload = {\r\n      addressId: selectedAddress._id,\r\n      totalAmount,\r\n      items,\r\n      paymentStatus: \"pending\",\r\n      paymentType: \"cod\",\r\n    };\r\n\r\n    console.log(payload);\r\n    dispatch(addOrder(payload));\r\n    setConfirmOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.authenticate && dispatch(getAddress());\r\n    auth.authenticate && dispatch(getCartItems());\r\n  }, [auth.authenticate]);\r\n\r\n  useEffect(() => {\r\n    const address = user.address.map((adr) => ({\r\n      ...adr,\r\n      selected: false,\r\n      edit: false,\r\n    }));\r\n    setAddress(address);\r\n    //user.address.length === 0 && setNewAddress(true);\r\n  }, [user.address]);\r\n\r\n  useEffect(() => {\r\n    // if (confirmOrder && user.placedOrderId) {\r\n    //   props.history.push(`/order_details/${user.placedOrderId}`);\r\n    // }\r\n  }, [user.placedOrderId]);\r\n\r\n  if (confirmOrder) {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <div className=\"\">Thank you</div>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <div className=\"checkoutContainer\">\r\n          {/* check if user logged in or not */}\r\n          <CheckoutStep\r\n            stepNumber={\"1\"}\r\n            title={\"LOGIN\"}\r\n            active={!auth.authenticate}\r\n            body={\r\n              auth.authenticate ? (\r\n                <div className=\"loggedInId\">\r\n                  <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\r\n                  <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <MaterialInput label=\"Email\" />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n          <CheckoutStep\r\n            stepNumber={\"2\"}\r\n            title={\"DELIVERY ADDRESS\"}\r\n            //active ={user.address.length >0 ?true:false}\r\n            active={!confirmAddress && auth.authenticate}\r\n            body={\r\n              <>\r\n                {confirmAddress ? (\r\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\r\n                ) : (\r\n                  address.map((adr) => (\r\n                    <Address\r\n                      selectAddress={selectAddress}\r\n                      enableAddressEditForm={enableAddressEditForm}\r\n                      confirmDeliveryAddress={confirmDeliveryAddress}\r\n                      onAddressSubmit={onAddressSubmit}\r\n                      adr={adr}\r\n                    />\r\n                  ))\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n\r\n          {/* AddressForm */}\r\n          {confirmAddress ? null : newAddress ? (\r\n            <>\r\n              <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\r\n              <span\r\n                onClick={() => {\r\n                  setNewAddress(!newAddress);\r\n                }}\r\n              >\r\n                CANCEL ADD NEW ADDRESS\r\n              </span>\r\n            </>\r\n          ) : auth.authenticate ? (\r\n            <CheckoutStep\r\n              stepNumber={\"+\"}\r\n              title={\"ADD NEW ADDRESSs\"}\r\n              active={false}\r\n              onClick={() => setNewAddress(!newAddress)}\r\n            />\r\n          ) : null}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"3\"}\r\n            title={\"ORDER SUMMARY\"}\r\n            active={orderSummary}\r\n            body={\r\n              orderSummary ? (\r\n                <CartPage onlyCartItems={true} />\r\n              ) : orderConfirmation ? (\r\n                <div className=\"stepCompleted\">\r\n                  {Object.keys(cart.cartItems).length} items\r\n                </div>\r\n              ) : null\r\n            }\r\n          />\r\n\r\n          {orderSummary && (\r\n            <Card\r\n              style={{\r\n                margin: \"10px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flexRow sb\"\r\n                style={{\r\n                  padding: \"20px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Order confirmation email will be sent to{\" \"}\r\n                  <strong>{auth.user.email}</strong>\r\n                </p>\r\n                <MaterialButton\r\n                  title=\"CONTINUE\"\r\n                  onClick={userOrderConfirmation}\r\n                  style={{\r\n                    width: \"200px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </Card>\r\n          )}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"4\"}\r\n            title={\"PAYMENT OPTIONS\"}\r\n            active={paymentOption}\r\n            body={\r\n              paymentOption && (\r\n                <div>\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      padding: \"20px\",\r\n                    }}\r\n                  >\r\n                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\r\n                    <div>Cash on delivery</div>\r\n                  </div>\r\n                  <MaterialButton\r\n                    title=\"CONFIRM ORDER\"\r\n                    onClick={onConfirmOrder}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      margin: \"0 0 20px 20px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Price Component */}\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\actions\\user.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\AdressForm.js",["235","236"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAddress } from \"../../actions\";\r\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\r\n\r\nconst AddressForm = (props) => {\r\n  const { initialData } = props;\r\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\r\n    initialData ? initialData.mobileNumber : \"\"\r\n  );\r\n  const [pinCode, setPinCode] = useState(\r\n    initialData ? initialData.pinCode : \"\"\r\n  );\r\n  const [locality, setLocality] = useState(\r\n    initialData ? initialData.locality : \"\"\r\n  );\r\n  const [address, setAddress] = useState(\r\n    initialData ? initialData.address : \"\"\r\n  );\r\n  const [cityDistrictTown, setCityDistrictTown] = useState(\r\n    initialData ? initialData.cityDistrictTown : \"\"\r\n  );\r\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\r\n  const [landmark, setLandmark] = useState(\r\n    initialData ? initialData.landmark : \"\"\r\n  );\r\n  const [alternatePhone, setAlternatePhone] = useState(\r\n    initialData ? initialData.alternatePhone : \"\"\r\n  );\r\n  const [addressType, setAddressType] = useState(\r\n    initialData ? initialData.addressType : \"\"\r\n  );\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [submitFlag, setSubmitFlag] = useState(false);\r\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\r\n\r\n  const inputContainer = {\r\n    width: \"100%\",\r\n    marginRight: 10,\r\n  };\r\n\r\n  const onAddressSubmit = (e) => {\r\n    const payload = {\r\n      address: {\r\n        name,\r\n        mobileNumber,\r\n        pinCode,\r\n        locality,\r\n        address,\r\n        cityDistrictTown,\r\n        state,\r\n        landmark,\r\n        alternatePhone,\r\n        addressType,\r\n      },\r\n    };\r\n    console.log(payload);\r\n    if (id) {\r\n      payload.address._id = id;\r\n    }\r\n    dispatch(addAddress(payload));\r\n    setSubmitFlag(true);\r\n\r\n    console.log(\"submit clicked\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"addressCount\", user.address);\r\n    if (submitFlag) {\r\n      console.log(\"where are we\", user);\r\n      let _address = {};\r\n      if (id) {\r\n        _address = {\r\n          _id: id,\r\n          name,\r\n          mobileNumber,\r\n          pinCode,\r\n          locality,\r\n          address,\r\n          cityDistrictTown,\r\n          state,\r\n          landmark,\r\n          alternatePhone,\r\n          addressType,\r\n        };\r\n      } else {\r\n        _address = user.address.slice(user.address.length - 1)[0];\r\n      }\r\n\r\n      props.onSubmitForm(_address);\r\n    }\r\n  }, [submitFlag]); //user.address this was before\r\n\r\n  const renderAddressForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"10-digit mobile number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Pincode\"\r\n              value={pinCode}\r\n              onChange={(e) => setPinCode(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Locality\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"City/District/Town\"\r\n              value={cityDistrictTown}\r\n              onChange={(e) => setCityDistrictTown(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"State\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Landmark (Optional)\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Alternate Phone (Optional)\"\r\n              value={alternatePhone}\r\n              onChange={(e) => setAlternatePhone(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Address Type</label>\r\n          <div className=\"flexRow\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"home\")}\r\n                name=\"addressType\"\r\n                value=\"home\"\r\n              />\r\n              <span>Home</span>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"work\")}\r\n                name=\"addressType\"\r\n                value=\"work\"\r\n              />\r\n              <span>Work</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <MaterialButton\r\n            title=\"SAVE AND DELIVER HERE\"\r\n            onClick={onAddressSubmit}\r\n            style={{\r\n              width: \"250px\",\r\n              margin: \"20px 0\",\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (props.withoutLayout) {\r\n    return <div>{renderAddressForm()}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\r\n      <div className={`checkoutHeader`}>\r\n        <div>\r\n          <span className=\"stepNumber\">+</span>\r\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"0 60px\",\r\n          paddingBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        {renderAddressForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\OrderPage\\index.js",["237","238"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrders } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nimport \"./style.css\";\r\nimport { Breed } from \"../../components/MaterialUI\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\n\r\nconst OrderPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{ maxWidth: \"1160px\", margin: \"5px auto\" }}>\r\n        <Breed\r\n          breed={[\r\n            { name: \"Home\", href: \"/\" },\r\n            { name: \"My Account\", href: \"/account\" },\r\n            { name: \"My Orders\", href: \"/account/orders\" },\r\n          ]}\r\n          breedIcon={<IoIosArrowForward />}\r\n        />\r\n        {console.log(user.orders && user.orders.length)}\r\n        {user.orders &&\r\n          user.orders.map((order) => {\r\n            return order.items.map((item) => (\r\n              <Card style={{ display: \"block\", margin: \"5px 0\" }}>\r\n                <Link\r\n                  to={`/order_details/${order._id}`}\r\n                  className=\"orderItemContainer\"\r\n                >\r\n                  <div className=\"orderImgContainer\">\r\n                    <img\r\n                      className=\"orderImg\"\r\n                      src={generatePublicUrl(\r\n                        item.productId.productPictures[0].img\r\n                      )}\r\n                    />\r\n                  </div>\r\n                  <div className=\"orderRow\">\r\n                    <div className=\"orderName\">{item.productId.name}</div>\r\n                    <div className=\"orderPrice\">\r\n                      <BiRupee />\r\n                      {item.payablePrice}\r\n                    </div>\r\n                    <div>{order.paymentStatus}</div>\r\n                  </div>\r\n                </Link>\r\n              </Card>\r\n            ));\r\n          })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ClotingAndAccessories\\index.js",["239","240"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getproductBySlug } from \"../../../actions\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function ClothingAndAccessories\r\n **/\r\n\r\nconst ClothingAndAccessories = (props) => {\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getproductBySlug(match.params.slug));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Card\r\n        style={{\r\n          boxSizing: \"border-box\",\r\n          padding: \"10px\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {product.products.map((product) => (\r\n          <div className=\"caContainer\">\r\n            <Link\r\n              className=\"caImgContainer\"\r\n              to={`/${product.slug}/${product._id}/p`}\r\n            >\r\n              <img src={product.productPictures[0].img} />\r\n            </Link>\r\n            <div>\r\n              <div className=\"caProductName\">{product.name}</div>\r\n              <div className=\"caProductPrice\">\r\n                <BiRupee />\r\n                {product.price}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClothingAndAccessories;","C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\containers\\OrderDetailsPage\\index.js",["241"],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Price.js",[],"C:\\Users\\pabinlimbu\\Documents\\practice\\mern-Ecommerce\\flipkart-clone\\src\\components\\UI\\Cart.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":7,"column":3,"nodeType":"248","messageId":"249","endLine":7,"endColumn":15},{"ruleId":"246","severity":1,"message":"250","line":13,"column":10,"nodeType":"248","messageId":"249","endLine":13,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":29,"column":6,"nodeType":"253","endLine":29,"endColumn":25,"suggestions":"254"},{"ruleId":"251","severity":1,"message":"252","line":35,"column":6,"nodeType":"253","endLine":35,"endColumn":25,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":11,"column":16,"nodeType":"258","messageId":"259","endLine":11,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":26,"column":17,"nodeType":"258","messageId":"259","endLine":26,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":58,"column":1,"nodeType":"262","endLine":88,"endColumn":3},{"ruleId":"263","severity":1,"message":"264","line":59,"column":3,"nodeType":"265","messageId":"266","endLine":86,"endColumn":4},{"ruleId":"246","severity":1,"message":"267","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":14},{"ruleId":"246","severity":1,"message":"268","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":18},{"ruleId":"246","severity":1,"message":"269","line":5,"column":26,"nodeType":"248","messageId":"249","endLine":5,"endColumn":35},{"ruleId":"246","severity":1,"message":"270","line":41,"column":9,"nodeType":"248","messageId":"249","endLine":41,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":48,"column":15,"nodeType":"273","endLine":48,"endColumn":39},{"ruleId":"271","severity":1,"message":"272","line":72,"column":11,"nodeType":"273","endLine":72,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":94,"column":13,"nodeType":"273","endLine":100,"endColumn":14},{"ruleId":"271","severity":1,"message":"274","line":173,"column":33,"nodeType":"273","endLine":173,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":201,"column":11,"nodeType":"273","endLine":201,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":234,"column":15,"nodeType":"273","endLine":234,"endColumn":35},{"ruleId":"251","severity":1,"message":"252","line":12,"column":6,"nodeType":"253","endLine":12,"endColumn":8,"suggestions":"275"},{"ruleId":"246","severity":1,"message":"276","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"277","line":1,"column":28,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"246","severity":1,"message":"278","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":21},{"ruleId":"246","severity":1,"message":"279","line":3,"column":23,"nodeType":"248","messageId":"249","endLine":3,"endColumn":34},{"ruleId":"246","severity":1,"message":"280","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":26},{"ruleId":"246","severity":1,"message":"281","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":27},{"ruleId":"260","severity":1,"message":"261","line":19,"column":1,"nodeType":"262","endLine":72,"endColumn":3},{"ruleId":"263","severity":1,"message":"264","line":20,"column":3,"nodeType":"265","messageId":"266","endLine":70,"endColumn":4},{"ruleId":"246","severity":1,"message":"282","line":3,"column":28,"nodeType":"248","messageId":"249","endLine":3,"endColumn":42},{"ruleId":"246","severity":1,"message":"283","line":10,"column":22,"nodeType":"248","messageId":"249","endLine":10,"endColumn":35},{"ruleId":"251","severity":1,"message":"284","line":23,"column":6,"nodeType":"253","endLine":23,"endColumn":8,"suggestions":"285"},{"ruleId":"260","severity":1,"message":"261","line":1,"column":1,"nodeType":"262","endLine":17,"endColumn":3},{"ruleId":"251","severity":1,"message":"286","line":21,"column":6,"nodeType":"253","endLine":21,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":33,"column":15,"nodeType":"273","endLine":33,"endColumn":39},{"ruleId":"260","severity":1,"message":"261","line":13,"column":1,"nodeType":"262","endLine":52,"endColumn":3},{"ruleId":"263","severity":1,"message":"264","line":16,"column":3,"nodeType":"265","messageId":"266","endLine":49,"endColumn":4},{"ruleId":"251","severity":1,"message":"290","line":28,"column":6,"nodeType":"253","endLine":28,"endColumn":8,"suggestions":"291"},{"ruleId":"251","severity":1,"message":"252","line":34,"column":6,"nodeType":"253","endLine":34,"endColumn":25,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"274","line":105,"column":17,"nodeType":"273","endLine":105,"endColumn":29},{"ruleId":"271","severity":1,"message":"274","line":109,"column":17,"nodeType":"273","endLine":109,"endColumn":29},{"ruleId":"271","severity":1,"message":"274","line":113,"column":17,"nodeType":"273","endLine":113,"endColumn":29},{"ruleId":"271","severity":1,"message":"274","line":117,"column":17,"nodeType":"273","endLine":117,"endColumn":29},{"ruleId":"246","severity":1,"message":"293","line":13,"column":3,"nodeType":"248","messageId":"249","endLine":13,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":33,"column":6,"nodeType":"253","endLine":33,"endColumn":25,"suggestions":"294"},{"ruleId":"260","severity":1,"message":"261","line":15,"column":1,"nodeType":"262","endLine":51,"endColumn":3},{"ruleId":"263","severity":1,"message":"264","line":17,"column":3,"nodeType":"265","messageId":"266","endLine":48,"endColumn":4},{"ruleId":"246","severity":1,"message":"295","line":10,"column":7,"nodeType":"248","messageId":"249","endLine":10,"endColumn":11},{"ruleId":"246","severity":1,"message":"295","line":66,"column":19,"nodeType":"248","messageId":"249","endLine":66,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":94,"column":27,"nodeType":"258","messageId":"259","endLine":94,"endColumn":29},{"ruleId":"246","severity":1,"message":"296","line":8,"column":11,"nodeType":"248","messageId":"249","endLine":8,"endColumn":24},{"ruleId":"246","severity":1,"message":"297","line":8,"column":26,"nodeType":"248","messageId":"249","endLine":8,"endColumn":39},{"ruleId":"260","severity":1,"message":"261","line":11,"column":1,"nodeType":"262","endLine":64,"endColumn":3},{"ruleId":"263","severity":1,"message":"264","line":12,"column":3,"nodeType":"265","messageId":"266","endLine":61,"endColumn":4},{"ruleId":"251","severity":1,"message":"252","line":176,"column":6,"nodeType":"253","endLine":176,"endColumn":25,"suggestions":"298"},{"ruleId":"246","severity":1,"message":"299","line":37,"column":14,"nodeType":"248","messageId":"249","endLine":37,"endColumn":19},{"ruleId":"251","severity":1,"message":"300","line":94,"column":6,"nodeType":"253","endLine":94,"endColumn":18,"suggestions":"301"},{"ruleId":"251","severity":1,"message":"252","line":20,"column":6,"nodeType":"253","endLine":20,"endColumn":8,"suggestions":"302"},{"ruleId":"288","severity":1,"message":"289","line":45,"column":21,"nodeType":"273","endLine":50,"endColumn":23},{"ruleId":"251","severity":1,"message":"284","line":22,"column":6,"nodeType":"253","endLine":22,"endColumn":8,"suggestions":"303"},{"ruleId":"288","severity":1,"message":"289","line":39,"column":15,"nodeType":"273","endLine":39,"endColumn":59},{"ruleId":"251","severity":1,"message":"284","line":20,"column":6,"nodeType":"253","endLine":20,"endColumn":8,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'StaticRouter' is defined but never used.","Identifier","unusedVar","'getCartItems' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["307"],["308"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Header' is defined but never used.","'MenuHeader' is defined but never used.","'IoIosCart' is defined but never used.","'goToOrder' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["309"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getproductBySlug' is defined but never used.","'generatePublicUrl' is defined but never used.","'getProductPage' is defined but never used.","'setPriceRange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["310"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["311"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params'. Either include them or remove the dependency array.",["312"],["313"],"'updateCart' is defined but never used.",["314"],"'cart' is assigned a value but never used.","'onQuantityInc' is assigned a value but never used.","'onQuantityDec' is assigned a value but never used.",["315"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["316"],["317"],["318"],["319"],"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"320","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"320","fix":"331"},{"desc":"320","fix":"332"},{"desc":"320","fix":"333"},{"desc":"334","fix":"335"},{"desc":"323","fix":"336"},{"desc":"325","fix":"337"},{"desc":"325","fix":"338"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"339","text":"340"},{"range":"341","text":"340"},"Update the dependencies array to be: [dispatch]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch, props]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"346","text":"347"},"Update the dependencies array to be: [dispatch, props.match.params]",{"range":"348","text":"349"},{"range":"350","text":"340"},{"range":"351","text":"340"},{"range":"352","text":"340"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user]",{"range":"353","text":"354"},{"range":"355","text":"343"},{"range":"356","text":"345"},{"range":"357","text":"345"},[1101,1120],"[auth.authenticate, dispatch]",[1398,1417],[355,357],"[dispatch]",[795,797],"[dispatch, props]",[733,735],"[dispatch, props.location.search]",[1002,1004],"[dispatch, props.match.params]",[1106,1125],[921,940],[5341,5360],[2655,2667],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user]",[685,687],[625,627],[621,623]]